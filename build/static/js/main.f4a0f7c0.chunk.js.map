{"version":3,"sources":["components/signUp/Signup.js","components/Header.js","components/SpendingEntryModal.js","components/Statistics.js","components/SpendingTableEntries.js","components/Dashboard.js","components/Login.js","index.js"],"names":["Signup","props","errors","username","password","conf_pass","setState","usernameErr","length","passErr","conf_password","signup","e","a","preventDefault","user_data","FormData","target","user_obj","forEach","val","key","state","axios","post","then","res","data","Swal","fire","icon","title","confirmButtonText","result","window","location","text","console","log","login_screen","className","md","id","onSubmit","this","bind","type","value","moment","format","name","htmlFor","color","onClick","React","Component","Header","isOpen","toggleCollapse","dark","expand","style","marginRight","user","navbar","right","to","logout","ModalPage","modal","startDate","Date","toggle","handleChange","entryAdded","addEntry","entry_data","entry_obj","paid_at","isConfirmed","selected","onChange","date","Statistics","totalAmount","TablePage","useState","spending","setSpending","setTotalAmount","activeItem","setActiveItem","tab","columns","label","field","sort","rows","getEntries","method","withCredentials","url","arr","obj","total_amount_arr","item","_id","substring","price","push","sum_total_amount","reduce","b","setTimeout","useEffect","link","active","role","tabId","marginTop","SpendingEntryModal","responsive","striped","bordered","small","paging","sortable","info","Dashboard","getUser","auth","Login","loginUsername","setLoginUsername","loginPassword","setLoginPassword","login","App","exact","path","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.f4a0f7c0.chunk.js","sourcesContent":["import React from 'react';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\nimport \"./Signup.css\";\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport moment from 'moment';\n\nclass Signup extends  React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            usernameErr: \"\",\n            passErr: \"\",\n            conf_password: \"\"\n        }\n    }\n\n    errors = (username,password,conf_pass) => {\n        if(username === \"\") { this.setState({usernameErr: \"Username cannot be empty\"}) }\n        if(username.length <= 5) { this.setState({usernameErr: \"Username must be longer then 5 characters\"}) }\n        if(password === \"\") { this.setState({passErr: \"Password cannot be empty\"}) }\n        if(password.length <= 5) { this.setState({passErr: \"Password must be longer then 5 characters\"}) }\n        if(conf_pass === \"\") {  this.setState({conf_password: \"Password confirmation cannot be empty\"}) }\n        if(conf_pass !== password) { this.setState({conf_password: \"Passwords must match\"}) }\n    }\n\n    signup = async (e) => {\n        e.preventDefault();\n        this.setState({usernameErr: \"\"});\n        this.setState({passErr: \"\"});\n        this.setState({conf_password: \"\"});\n\n        try{\n            const user_data = new FormData(e.target);\n            const user_obj = {};\n            user_data.forEach((val,key) => {\n                user_obj[key] = val;\n            });\n\n            await this.errors(user_obj.username, user_obj.password, user_obj.conf_password);\n\n            if(this.state.usernameErr !== \"\" || this.state.passErr !== \"\" || this.state.conf_password !== \"\") {\n                return false;\n            }else {\n                axios.post('/register', user_obj).then((res) => {\n                    if(res.data === \"success\") {\n                        Swal.fire({\n                            icon: 'success',\n                            title: 'Registration was successful!',\n                            confirmButtonText: `Continue`,\n                        }).then((result) => {\n                            window.location = '/login';\n                        });\n                    }else {\n                        Swal.fire({\n                            icon: 'error',\n                            title: 'Something went wrong with registration, please try again.',\n                            text: `${res.data}`\n                        });\n                    }\n                });\n            }\n        }catch(err) {\n            console.log(err);\n            Swal.fire({\n                'icon': 'error',\n                'title': 'Something went wrong, please try again.'\n            });\n        }\n    }\n\n    login_screen = () => {\n        window.location = '/login';\n    }\n\n    render() {\n        return (\n            <MDBContainer className=\"signup_cont\">\n                <MDBRow className=\"signup_row\">\n                    <MDBCol md=\"6 mx-auto\">\n                        <form id=\"sign_form\" onSubmit={this.signup.bind(this)}>\n                            <input type=\"hidden\" value={moment().format('MMM Do YY')} name=\"created_at\"/>\n                            <p className=\"h4 text-center mb-4\">Registration</p>\n                            <label htmlFor=\"defaultFormLoginEmailEx\" className=\"grey-text\">\n                                Your Username\n                            </label>\n                            {this.state.usernameErr ? <p className=\"text-danger\">{this.state.usernameErr}</p>: ''}\n                            <input type=\"text\" id=\"defaultFormLoginEmailEx\" className=\"form-control\" name=\"username\"/>\n                            <br />\n                            <label htmlFor=\"defaultFormLoginPasswordEx\" className=\"grey-text\">\n                                Your password\n                            </label>\n                            {this.state.passErr ? <p className=\"text-danger\"> {this.state.passErr}</p>: ''}\n                            <input type=\"password\" id=\"defaultFormLoginPasswordEx\" className=\"form-control\" name=\"password\"/>\n                            <br />\n                            <label htmlFor=\"defaultFormLoginPasswordExRep\" className=\"grey-text\">\n                                Confirm Your password\n                            </label>\n                            {this.state.conf_password ? <p className=\"text-danger\">{this.state.conf_password}</p>: ''}\n                            <input type=\"password\" id=\"defaultFormLoginPasswordExRep\" className=\"form-control\" name=\"conf_password\"/>\n                            <div className=\"text-center mt-4\">\n                                <MDBBtn color=\"success\" type=\"submit\">Register</MDBBtn>\n                                <MDBBtn color=\"indigo\" type=\"button\" onClick={this.login_screen.bind(this)}>Already a member ?</MDBBtn>\n                            </div>\n                        </form>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n        );\n    }\n};\n\nexport default Signup;","import React, { Component } from \"react\";\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBIcon } from \"mdbreact\";\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nclass Header extends Component {\n    state = {\n        isOpen: false\n    };\n\n    toggleCollapse = () => {\n        this.setState({ isOpen: !this.state.isOpen });\n    }\n\n    render() {\n        return (\n            <Router>\n                <MDBNavbar color=\"default-color\" dark expand=\"md\">\n                    <MDBNavbarBrand>\n                        <strong className=\"white-text\">Budget Tracker</strong><br/>\n                        <small><MDBIcon icon=\"user\" style={{marginRight: 15}}/>{this.props.user}</small>\n                    </MDBNavbarBrand>\n                    <MDBNavbarToggler onClick={this.toggleCollapse} />\n                    <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\n                        <MDBNavbarNav right>\n                            <MDBNavItem>\n                                <MDBNavLink to=\"#!\" onClick={this.props.logout}>Logout</MDBNavLink>\n                            </MDBNavItem>\n                        </MDBNavbarNav>\n                    </MDBCollapse>\n                </MDBNavbar>\n            </Router>\n        );\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport { MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter} from 'mdbreact';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\n\nclass ModalPage extends Component {\n    state = {\n        modal: false,\n        startDate: new Date()\n    }\n\n    toggle = () => {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    handleChange = () => {\n        this.props.entryAdded();\n    }\n\n    addEntry = (e) => {\n        e.preventDefault();\n        const entry_data = new FormData(e.target);\n        const entry_obj = {};\n        entry_data.forEach((val,key) => {\n            entry_obj[key] = val;\n        });\n\n        entry_obj.paid_at = moment(this.state.startDate).format('MMM Do YY');\n\n        if (entry_obj !== {}){\n            axios.post('/add_spending', entry_obj).then((res) => {\n                if(res.data === \"Spending added successfully\") {\n                    this.handleChange();\n                    Swal.fire({\n                        icon: 'success',\n                        title: 'Spending added successfully',\n                        confirmButtonText: `Continue`,\n                    }).then((result) => {\n                        if (result.isConfirmed){\n                            this.toggle();\n                        }else {\n                            return false;\n                        }\n                    });\n                }else {\n                    Swal.fire({\n                        icon: 'error',\n                        title: 'Something went wrong with registration, please try again.',\n                        text: `${res.data}`\n                    });\n                }\n            });\n        }\n\n    }\n\n    render() {\n        return (\n            <>\n                <MDBBtn onClick={this.toggle}>Add Entry</MDBBtn>\n                <MDBModal isOpen={this.state.modal} toggle={this.toggle}>\n                    <MDBModalHeader toggle={this.toggle}>Add Spending Entry</MDBModalHeader>\n                    <form onSubmit={this.addEntry.bind(this)}>\n                        <MDBModalBody>\n                                <input type=\"hidden\" name=\"username\" value={this.props.user}/>\n                                <label htmlFor=\"item\" className=\"grey-text\">\n                                    Item\n                                </label>\n                                <input type=\"text\" id=\"item\" name=\"item\" className=\"form-control\" />\n                                <br />\n                                <label htmlFor=\"price\" className=\"grey-text\">\n                                    Cost\n                                </label>\n                                <input type=\"number\" name=\"price\" id=\"price\" className=\"form-control\" />\n                                <label htmlFor=\"date\" className=\"grey-text\">\n                                    Date\n                                </label><br/>\n                                <input type=\"hidden\" name=\"paid_at\" value={this.state.startDate}/>\n                                <DatePicker selected={this.state.startDate} onChange={date => this.setState({startDate: date})} />\n                        </MDBModalBody>\n                        <MDBModalFooter>\n                            <MDBBtn color=\"secondary\" onClick={this.toggle}>Close</MDBBtn>\n                            <MDBBtn color=\"primary\" type=\"submit\">Add entry</MDBBtn>\n                        </MDBModalFooter>\n                    </form>\n                </MDBModal>\n            </>\n        );\n    }\n}\n\nexport default ModalPage;","import React from 'react';\nimport {MDBIcon,MDBContainer} from \"mdbreact\";\nimport './SpendingTableEntries.css';\n\nconst Statistics = (props) => {\n    return (\n        <MDBContainer>\n            <div className=\"statisticRow\">\n                <h1 className=\"heading\">Spend Total: </h1>\n                <MDBIcon icon=\"cash-register\" className=\"icon\"/>\n                <p>€ {props.totalAmount}</p>\n            </div>\n        </MDBContainer>\n    );\n}\n\nexport default Statistics;","import React, {useState,useEffect} from 'react';\nimport { MDBContainer, MDBDataTable,MDBTabPane, MDBTabContent,MDBNav, MDBNavItem, MDBNavLink} from 'mdbreact';\nimport SpendingEntryModal from \"./SpendingEntryModal\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport './SpendingTableEntries.css';\nimport Statistics from \"./Statistics\";\n\nconst TablePage = (props) => {\n    const [spending,setSpending] = useState(null);\n    const [totalAmount, setTotalAmount] = useState(null);\n    const [activeItem, setActiveItem] = useState(\"1\");\n\n    const toggle = tab => {\n        if (activeItem !== tab) {\n            setActiveItem(tab);\n        }\n    };\n\n    const data = {\n        columns: [\n            {\n                label: '_id',\n                field: '_id',\n                sort: 'asc'\n            },\n            {\n                label: 'Item',\n                field: 'item',\n                sort: 'asc'\n            },\n            {\n                label: 'Cost',\n                field: 'price',\n                sort: 'asc'\n            },\n            {\n                label: 'Date',\n                field: 'paid_at',\n                sort: 'asc'\n            }\n\n        ],\n        rows: spending\n    }\n\n    const getEntries = () => {\n        axios({\n            method: \"POST\",\n            data: {\n                username: props.user\n            },\n            withCredentials: true,\n            url: \"/spending\",\n        }).then((res) => {\n            if(res.data !== {}){\n                let arr = [];\n                let obj = {};\n                let total_amount_arr = [];\n                res.data.forEach(item => {\n                    if(item._id.length > 10){\n                        item._id = item._id.substring(0,10);\n                    }\n                    obj = {\n                        _id: item._id,\n                        item: item.item,\n                        price: '€ ' + item.price,\n                        paid_at: item.paid_at\n                    }\n                    total_amount_arr.push(item.price);\n                    arr.push(obj);\n                });\n\n                let sum_total_amount = total_amount_arr.reduce((a,b) => {\n                    return a + b;\n                },0);\n\n                setTimeout(() => {\n                    setTotalAmount(sum_total_amount);\n                },1000);\n\n                setSpending([...arr]);\n            }else {\n                Swal.fire({\n                    icon: 'error',\n                    title: 'Error with getting entries, please try again later.'\n                });\n            }\n        });\n    };\n\n    useEffect(()=> {\n        getEntries();\n    },[]);\n\n    return (\n        <>\n            <br/><br/>\n            <MDBContainer>\n                <MDBNav className=\"nav-tabs mt-5\">\n                    <MDBNavItem>\n                        <MDBNavLink link to=\"#\" active={activeItem === \"1\"} onClick={() => toggle(\"1\")} role=\"tab\" >\n                            Spending Breakdown\n                        </MDBNavLink>\n                    </MDBNavItem>\n                    <MDBNavItem>\n                        <MDBNavLink link to=\"#\" active={activeItem === \"2\"} onClick={() => toggle(\"2\")} role=\"tab\" >\n                            Statistics\n                        </MDBNavLink>\n                    </MDBNavItem>\n                </MDBNav>\n                <MDBTabContent activeItem={activeItem} >\n                    <MDBTabPane tabId=\"1\" role=\"tabpanel\">\n                        <div>\n                            <h1 style={{marginRight: 15, marginTop: 25}}>Spending Breakdown</h1>\n                            <SpendingEntryModal user={props.user} entryAdded={getEntries}/>\n                        </div>\n                        <br/>\n                        <MDBDataTable responsive striped bordered small data={data} paging={true} sortable={false} info={true}/>\n                    </MDBTabPane>\n                    <MDBTabPane tabId=\"2\" role=\"tabpanel\">\n                        <Statistics totalAmount={totalAmount}/>\n                    </MDBTabPane>\n                </MDBTabContent>\n            </MDBContainer>\n        </>\n    );\n};\n\nexport default TablePage;","import React from \"react\";\nimport axios from \"axios\";\nimport Swal from 'sweetalert2';\nimport Header from \"./Header\";\n// import Example from \"./TestChart\";\nimport SpendingTableEntries from \"./SpendingTableEntries\";\n\nclass Dashboard extends React.Component  {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: null,\n            auth: false\n        }\n    }\n\n    logout = () => {\n        axios({\n            method: \"post\",\n            url: \"/logout\",\n            withCredentials: true,\n        }).then((res) => {\n            window.location = '/login';\n        });\n    }\n\n    getUser = () => {\n        axios({\n            method: \"GET\",\n            withCredentials: true,\n            url: \"/user\",\n        }).then((res) => {\n            if(res.data !== \"\"){\n                this.setState({data: res.data});\n                this.setState({auth: true});\n            }else {\n                Swal.fire({\n                    icon: 'error',\n                    title: 'Error with authentication, please try again later.'\n                });\n\n                setTimeout(() => {\n                    this.logout();\n                }, 2000);\n            }\n        });\n    };\n\n    componentDidMount() {\n        this.getUser();\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.auth\n                    ?\n                    <div>\n                        <Header user={this.state.data.username} logout={this.logout}/>\n                        <SpendingTableEntries user={this.state.data.username}/>\n                    </div>\n                    : \"\"\n                }\n            </div>\n        );\n    }\n}\n\nexport default Dashboard;","import React, {useState} from 'react';\nimport {MDBBtn, MDBCol, MDBContainer, MDBRow} from \"mdbreact\";\nimport axios from \"axios\";\nimport Swal from 'sweetalert2';\n\nconst Login = () => {\n    const [loginUsername, setLoginUsername] = useState(\"\");\n    const [loginPassword, setLoginPassword] = useState(\"\");\n\n    const login = (e) => {\n        e.preventDefault();\n\n        axios({\n            method: \"POST\",\n            data: {\n                username: loginUsername,\n                password:loginPassword\n            },\n            withCredentials: true,\n            url: \"/login\",\n        }).then((res) => {\n            if(res.data === \"No user exists\"){\n                Swal.fire({\n                    icon: 'error',\n                    title: 'Something went wrong with registration, please try again.',\n                    text: `${res.data}`\n                });\n            }else {\n                window.location = '/dashboard';\n            }\n        });\n    }\n\n\n\n    return (\n        <MDBContainer className=\"signup_cont\">\n            <MDBRow className=\"signup_row\">\n                <MDBCol md=\"6 mx-auto\">\n                    <form id=\"sign_form\">\n                        <p className=\"h4 text-center mb-4\">Login</p>\n                        <label htmlFor=\"defaultFormLoginEmailEx\" className=\"grey-text\">\n                            Your Username\n                        </label>\n                        <input type=\"text\" id=\"defaultFormLoginEmailEx\" className=\"form-control\" name=\"username\" onChange={e => setLoginUsername(e.target.value)}/>\n                        <br />\n                        <label htmlFor=\"defaultFormLoginPasswordEx\" className=\"grey-text\">\n                            Your password\n                        </label>\n                        <input type=\"password\" id=\"defaultFormLoginPasswordEx\" className=\"form-control\" name=\"password\" onChange={e => setLoginPassword(e.target.value)}/>\n                        <br />\n                        <div className=\"text-center mt-4\">\n                            <MDBBtn color=\"success\" type=\"submit\" onClick={e => login(e)}>Login</MDBBtn>\n                        </div>\n                    </form>\n                </MDBCol>\n            </MDBRow>\n        </MDBContainer>\n    );\n}\n\nexport default Login;","import '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Signup from \"./components/signUp/Signup\";\nimport { BrowserRouter, Route,Switch} from 'react-router-dom';\nimport Dashboard from \"./components/Dashboard\";\nimport Login from \"./components/Login\";\n\nconst App = () => {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route exact={true} path=\"/\" component={Signup} />\n                <Route exact={true} path=\"/dashboard\" component={Dashboard} />\n                <Route exact={true} path=\"/login\" component={Login} />\n            </Switch>\n        </BrowserRouter>\n    );\n}\n\nReactDOM.render(<App/>, document.querySelector(\"#root\"));"],"sourceRoot":""}