[{"/Users/branislavbuna/Desktop/react-budget-manager/src/index.js":"1","/Users/branislavbuna/Desktop/react-budget-manager/src/components/Dashboard.js":"2","/Users/branislavbuna/Desktop/react-budget-manager/src/components/Login.js":"3","/Users/branislavbuna/Desktop/react-budget-manager/src/components/signUp/Signup.js":"4","/Users/branislavbuna/Desktop/react-budget-manager/src/components/Header.js":"5","/Users/branislavbuna/Desktop/react-budget-manager/src/components/SpendingTableEntries.js":"6","/Users/branislavbuna/Desktop/react-budget-manager/src/components/SpendingEntryModal.js":"7","/Users/branislavbuna/Desktop/react-budget-manager/src/components/Statistics.js":"8","/Users/branislavbuna/Desktop/react-budget-manager/src/components/UserProfile.js":"9","/Users/branislavbuna/Desktop/react-budget-manager/src/serviceWorkerRegistration.js":"10","/Users/branislavbuna/Desktop/react-budget-manager/src/LandingPage.js":"11","/Users/branislavbuna/Desktop/react-budget-manager/src/components/Footer.js":"12","/Users/branislavbuna/Desktop/react-budget-manager/src/components/HistoricalStatistics.js":"13"},{"size":1559,"mtime":1618990100782,"results":"14","hashOfConfig":"15"},{"size":1938,"mtime":1618481148527,"results":"16","hashOfConfig":"15"},{"size":2910,"mtime":1618990634147,"results":"17","hashOfConfig":"15"},{"size":6782,"mtime":1618916503203,"results":"18","hashOfConfig":"15"},{"size":4600,"mtime":1618481873654,"results":"19","hashOfConfig":"15"},{"size":12068,"mtime":1618999958056,"results":"20","hashOfConfig":"15"},{"size":5439,"mtime":1616419539153,"results":"21","hashOfConfig":"15"},{"size":4326,"mtime":1618993013369,"results":"22","hashOfConfig":"15"},{"size":14901,"mtime":1618913103308,"results":"23","hashOfConfig":"15"},{"size":4981,"mtime":1616412851893,"results":"24","hashOfConfig":"15"},{"size":5027,"mtime":1618481850425,"results":"25","hashOfConfig":"15"},{"size":13916,"mtime":1618993158609,"results":"26","hashOfConfig":"15"},{"size":11308,"mtime":1618999433226,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1m3t0n2",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/branislavbuna/Desktop/react-budget-manager/src/index.js",[],["56","57"],"/Users/branislavbuna/Desktop/react-budget-manager/src/components/Dashboard.js",[],"/Users/branislavbuna/Desktop/react-budget-manager/src/components/Login.js",[],"/Users/branislavbuna/Desktop/react-budget-manager/src/components/signUp/Signup.js",[],"/Users/branislavbuna/Desktop/react-budget-manager/src/components/Header.js",[],"/Users/branislavbuna/Desktop/react-budget-manager/src/components/SpendingTableEntries.js",["58"],"/Users/branislavbuna/Desktop/react-budget-manager/src/components/SpendingEntryModal.js",[],"/Users/branislavbuna/Desktop/react-budget-manager/src/components/Statistics.js",[],"/Users/branislavbuna/Desktop/react-budget-manager/src/components/UserProfile.js",["59"],"import React from 'react';\nimport Header from './Header';\nimport jwt_decode from \"jwt-decode\";\nimport Cookies from 'universal-cookie';\nimport axios from \"axios\";\nimport Swal from 'sweetalert2';\nimport { MDBContainer, MDBBtn, MDBRow, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\nimport userPlaceholder from '../images/user.png';\nimport kofi from '../images/kofi.png';\nimport * as Sentry from \"@sentry/react\";\nimport './UserProfile.css';\nimport toast, { Toaster } from 'react-hot-toast';\n\nconst loaded_user_profile = () => toast.success('Successfully loaded user profile.');\nconst avatar_uploaded = () => toast.success('Avatar uploaded.');\nconst avatar_upload_err = () => toast.error('Error with uploading avatar.');\nconst budget_updated = () => toast.success('Monthly budget was changed successfully.');\nconst budget_update_err = () => toast.error('Error with updating monthly budget.');\n\nclass UserProfile extends React.Component{\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: null,\n            auth: false,\n            username: null,\n            user_id: null,\n            userProfile: null,\n            modal: false,\n            file: null,\n            avatar: '',\n            budgetModal: false,\n            budget: null,\n            new_budget: null\n        }\n\n        this.cookies = new Cookies()\n    }\n\n    userProfile = username => {\n        axios({\n            method: \"post\",\n            url: \"https://budget-manager-app28.herokuapp.com/getProfile\",\n            withCredentials: true,\n            data: {user: username}\n        }).then((res) => {\n            this.setState({userProfile: res.data});\n            this.setState({budget: res.data.monthlyBudget});\n            loaded_user_profile();\n        });\n    }\n\n    arrayBufferToBase64 = buffer => {\n        let binary = '';\n        let bytes = [].slice.call(new Uint8Array(buffer));\n\n        bytes.forEach((b) => binary += String.fromCharCode(b));\n\n        return window.btoa(binary);\n    }\n\n    getUserAvatar = username => {\n        axios({\n            method: \"post\",\n            url: \"https://budget-manager-app28.herokuapp.com/get_avatar\",\n            withCredentials: true,\n            data: {user: username}\n        }).then((res) => {\n            let base64Flag = `data:${res.data.contentType};base64,`;\n            let imageStr = this.arrayBufferToBase64(res.data.avatar.data);\n            this.setState({avatar: base64Flag + imageStr})\n        });\n    }\n\n    logout = () => {\n        axios({\n            method: \"post\",\n            url: \"https://budget-manager-app28.herokuapp.com/logout\",\n            withCredentials: true,\n        }).then((res) => {\n            this.cookies.remove('token');\n            window.location = '/';\n        });\n    }\n\n    getUser = () => {\n        const token = this.cookies.get('token');\n        if(!token) {\n            Swal.fire({\n                icon: 'error',\n                title: 'Error with authentication, please try again later.'\n            });\n\n            setTimeout(() => {\n                this.logout();\n            }, 2000);\n        }else {\n            const dekode_jwt = jwt_decode(token);\n            this.setState({username: dekode_jwt.username});\n            this.setState({user_id: dekode_jwt._id});\n            this.setState({auth: true});\n            this.userProfile(dekode_jwt.username);\n            this.getUserAvatar(dekode_jwt.username);\n        }\n    }\n\n    deleteUser = () => {\n        Swal.fire({\n            icon: 'info',\n            title: 'Are you sure to delete your account ?',\n            showDenyButton: false,\n            showCancelButton: true,\n            confirmButtonText: `Delete Permanently`,\n            confirmButtonColor: '#FF3547'\n        }).then((result) => {\n            if (result.isConfirmed) {\n                axios({\n                    method: \"post\",\n                    url: \"https://budget-manager-app28.herokuapp.com/deleteUser\",\n                    data: {username: this.state.username},\n                    withCredentials: true,\n                }).then((res) => {\n                    Swal.fire({\n                        icon: 'success',\n                        title: `${res.data}`,\n                        text: 'You will be logged out ...'\n                    });\n\n                    setTimeout(() => {\n                        this.logout();\n                    }, 1500)\n                });\n            }\n        })\n    }\n\n    toggle = () => {\n        this.setState({modal: !this.state.modal});\n    }\n\n    budgetToggle = () => {\n        this.setState({budgetModal: !this.state.budgetModal});\n    }\n\n    saveImg = (e) => {\n        const selectedFile = e.target.files[0];\n        this.setState({\n            file: selectedFile,\n            loaded: 0\n        });\n    }\n\n    uploadAvatar = () => {\n        const data = new FormData();\n        data.append('avatar', this.state.file);\n        data.append('username', this.state.username);\n\n        axios({\n            method: \"post\",\n            url: \"https://budget-manager-app28.herokuapp.com/add_avatar\",\n            withCredentials: true,\n            data: data\n        }).then(res => {\n            this.getUserAvatar(this.state.username);\n            this.toggle();\n            if(res.data === \"success\") {\n                avatar_uploaded();\n            }else {\n                avatar_upload_err();\n            }\n        });\n    }\n\n    changeBudget = (e) => {\n        const new_budget = Number(e.target.value);\n        this.setState({new_budget: new_budget});\n    }\n\n    updateBudget = () => {\n        if(this.state.new_budget !== null || this.state.new_budget !== undefined) {\n            axios({\n                method: \"post\",\n                url: \"https://budget-manager-app28.herokuapp.com/changeBudget\",\n                withCredentials: true,\n                data: {new_budget: this.state.new_budget, username: this.state.username}\n            }).then(res => {\n                if(res.data === \"success\") {\n                    this.budgetToggle();\n                    this.getUser();\n                    budget_updated();\n                }else {\n                    budget_update_err();\n                }\n            })\n        }else {\n            budget_update_err();\n        }\n    }\n\n    componentDidMount() {\n        this.getUser();\n    }\n\n    render(){\n        return (\n            <div>\n                {this.state.auth \n                ? \n                <div>\n                    <Header user={this.state.username} logout={this.logout} loc=\"dashboard\"/>\n                    <br/>\n                    <MDBContainer>\n                        <MDBRow>\n                            <MDBCol sm=\"6\" md=\"4\">\n                                <MDBCard>\n                                    <button onClick={this.toggle} className=\"avatar_handler\">\n                                        <MDBCardImage style={{marginTop: 10}} className=\"img-fluid\" src={this.state.avatar === '' ? userPlaceholder : this.state.avatar}/>\n                                    </button>\n                                    <MDBCardBody>\n                                        <MDBCardTitle className=\"text-center\">{this.state.username}</MDBCardTitle>\n                                        <MDBCardText className=\"text-center\">Focusing on my spending.</MDBCardText>\n                                    </MDBCardBody>\n                                </MDBCard>\n                            </MDBCol>\n                            <MDBCol sm=\"6\" md=\"8\">\n                                <MDBCard style={{marginBottom: 25}}>\n                                    {this.state.userProfile ? \n                                        <MDBCardBody style={{padding: \"4rem\"}}>\n                                        <MDBRow>\n                                            <MDBCol style={{ maxWidth: \"15rem\" }}>\n                                                Full Name\n                                            </MDBCol>\n                                            <MDBCol>\n                                                <small>{this.state.userProfile.fullName}</small>\n                                            </MDBCol>\n                                        </MDBRow>\n                                        <hr  style={{\n                                                color: '#2BBBAD',\n                                                backgroundColor: '#2BBBAD',\n                                                height: .2,\n                                                borderColor : '#2BBBAD'\n                                        }}/>\n                                        <MDBRow>\n                                            <MDBCol style={{ maxWidth: \"15rem\" }}>\n                                                Email\n                                            </MDBCol>\n                                            <MDBCol>\n                                                <small>{this.state.userProfile.email}</small>\n                                            </MDBCol>\n                                        </MDBRow>\n                                        <hr  style={{\n                                                color: '#2BBBAD',\n                                                backgroundColor: '#2BBBAD',\n                                                height: .2,\n                                                borderColor : '#2BBBAD'\n                                        }}/>\n                                         <MDBRow>\n                                            <MDBCol style={{ maxWidth: \"15rem\" }}>\n                                                Monthly Budget\n                                            </MDBCol>\n                                            <MDBCol>\n                                                <small>{this.state.userProfile.monthlyBudget} €</small>\n                                            </MDBCol>\n                                        </MDBRow>\n                                        <a onClick={this.budgetToggle}><small className=\"text-success\">Change budget</small></a>\n                                        <hr  style={{\n                                                color: '#2BBBAD',\n                                                backgroundColor: '#2BBBAD',\n                                                height: .2,\n                                                borderColor : '#2BBBAD'\n                                        }}/>\n                                        <MDBRow>\n                                            <MDBCol style={{ maxWidth: \"15rem\" }}>\n                                                User from\n                                            </MDBCol>\n                                            <MDBCol>\n                                                <small>{this.state.userProfile.created_at}</small>\n                                            </MDBCol>\n                                        </MDBRow>\n                                        <hr  style={{\n                                                color: '#2BBBAD',\n                                                backgroundColor: '#2BBBAD',\n                                                height: .2,\n                                                borderColor : '#2BBBAD'\n                                        }}/>\n                                    </MDBCardBody> : \"\"\n                                    }\n                                </MDBCard>\n                                <div className=\"profile_btns\">\n                                    {/* <MDBBtn>Edit Profile</MDBBtn> */}\n                                    <MDBBtn color=\"danger\" onClick={this.deleteUser}>Delete Account</MDBBtn>\n                                    <a href=\"https://www.buymeacoffee.com/branislavbuna\" target=\"blank\">\n                                        <MDBBtn className=\"support_btn\">\n                                            <img src={kofi} alt=\"buy me a coffee logo\" className=\"kofi\"/>\n                                            Support Creator\n                                        </MDBBtn>\n                                    </a>\n                                </div>\n                            </MDBCol>\n                        </MDBRow>\n                        <MDBModal isOpen={this.state.modal} toggle={this.toggle}>\n                            <MDBModalHeader toggle={this.toggle}>Avatar Upload</MDBModalHeader>\n                            <MDBModalBody>\n                            <div className=\"input-group\">\n                                <div className=\"custom-file\">\n                                    <input\n                                    type=\"file\"\n                                    className=\"custom-file-input\"\n                                    id=\"inputGroupFile01\"\n                                    onChange={this.saveImg}\n                                    name=\"avatar\"\n                                    />\n                                    <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\n                                    Choose file\n                                    </label>\n                                </div>\n                            </div>\n                            </MDBModalBody>\n                            <MDBModalFooter>\n                                <MDBBtn color=\"secondary\" onClick={this.toggle}>Close</MDBBtn>\n                                <MDBBtn color=\"primary\" onClick={this.uploadAvatar}>Upload</MDBBtn>\n                            </MDBModalFooter>\n                        </MDBModal>\n\n                        <MDBModal isOpen={this.state.budgetModal} toggle={this.budgetToggle}>\n                            <MDBModalHeader>Change Budget</MDBModalHeader>\n                            <MDBModalBody>\n                                <input\n                                    type=\"number\"\n                                    className=\"form-control\"\n                                    name=\"budget\"\n                                    placeholder={'Current budget: ' + this.state.budget + '€'}\n                                    onChange={this.changeBudget}\n                                />\n                            </MDBModalBody>\n                            <MDBModalFooter>\n                                <MDBBtn color=\"secondary\" onClick={this.budgetToggle}>Close</MDBBtn>\n                                <MDBBtn color=\"primary\" onClick={this.updateBudget}>Change Budget</MDBBtn>\n                            </MDBModalFooter>\n                        </MDBModal>\n                        <Toaster />\n                    </MDBContainer>\n                </div>\n                : \"\"\n                }\n            </div>\n        );\n    }\n}\n\nexport default Sentry.withProfiler(UserProfile);","/Users/branislavbuna/Desktop/react-budget-manager/src/serviceWorkerRegistration.js",[],"/Users/branislavbuna/Desktop/react-budget-manager/src/LandingPage.js",[],"/Users/branislavbuna/Desktop/react-budget-manager/src/components/Footer.js",["60","61"],"/Users/branislavbuna/Desktop/react-budget-manager/src/components/HistoricalStatistics.js",["62"],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":248,"column":7,"nodeType":"69","endLine":248,"endColumn":9,"suggestions":"70"},{"ruleId":"71","severity":1,"message":"72","line":266,"column":41,"nodeType":"73","endLine":266,"endColumn":72},{"ruleId":"71","severity":1,"message":"74","line":107,"column":51,"nodeType":"73","endLine":107,"endColumn":132},{"ruleId":"71","severity":1,"message":"74","line":170,"column":47,"nodeType":"73","endLine":170,"endColumn":130},{"ruleId":"75","severity":1,"message":"76","line":1,"column":26,"nodeType":"77","messageId":"78","endLine":1,"endColumn":35},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getEntries'. Either include it or remove the dependency array.","ArrayExpression",["81"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},"Update the dependencies array to be: [getEntries]",{"range":"84","text":"85"},[9271,9273],"[getEntries]"]