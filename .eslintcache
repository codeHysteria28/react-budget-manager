[{"/Users/branislavbuna/Desktop/react-budget-manager/src/index.js":"1","/Users/branislavbuna/Desktop/react-budget-manager/src/components/Dashboard.js":"2","/Users/branislavbuna/Desktop/react-budget-manager/src/components/Login.js":"3","/Users/branislavbuna/Desktop/react-budget-manager/src/components/signUp/Signup.js":"4","/Users/branislavbuna/Desktop/react-budget-manager/src/components/Header.js":"5","/Users/branislavbuna/Desktop/react-budget-manager/src/components/SpendingTableEntries.js":"6","/Users/branislavbuna/Desktop/react-budget-manager/src/components/SpendingEntryModal.js":"7","/Users/branislavbuna/Desktop/react-budget-manager/src/components/Statistics.js":"8","/Users/branislavbuna/Desktop/react-budget-manager/src/components/UserProfile.js":"9","/Users/branislavbuna/Desktop/react-budget-manager/src/serviceWorkerRegistration.js":"10","/Users/branislavbuna/Desktop/react-budget-manager/src/LandingPage.js":"11","/Users/branislavbuna/Desktop/react-budget-manager/src/components/Footer.js":"12"},{"size":1697,"mtime":1618418896813,"results":"13","hashOfConfig":"14"},{"size":1943,"mtime":1618419549934,"results":"15","hashOfConfig":"14"},{"size":2567,"mtime":1618423253066,"results":"16","hashOfConfig":"14"},{"size":7214,"mtime":1618420214768,"results":"17","hashOfConfig":"14"},{"size":4626,"mtime":1618477129063,"results":"18","hashOfConfig":"14"},{"size":10792,"mtime":1616491723625,"results":"19","hashOfConfig":"14"},{"size":5439,"mtime":1616419539153,"results":"20","hashOfConfig":"14"},{"size":4146,"mtime":1616491566215,"results":"21","hashOfConfig":"14"},{"size":9115,"mtime":1618420394749,"results":"22","hashOfConfig":"14"},{"size":4981,"mtime":1616412851893,"results":"23","hashOfConfig":"14"},{"size":4877,"mtime":1618479091905,"results":"24","hashOfConfig":"14"},{"size":1896,"mtime":1618479631621,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1m3t0n2",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/branislavbuna/Desktop/react-budget-manager/src/index.js",[],["52","53"],"/Users/branislavbuna/Desktop/react-budget-manager/src/components/Dashboard.js",[],"/Users/branislavbuna/Desktop/react-budget-manager/src/components/Login.js",[],"/Users/branislavbuna/Desktop/react-budget-manager/src/components/signUp/Signup.js",[],"/Users/branislavbuna/Desktop/react-budget-manager/src/components/Header.js",[],"/Users/branislavbuna/Desktop/react-budget-manager/src/components/SpendingTableEntries.js",["54"],"import React, {useState,useEffect} from 'react';\nimport { MDBContainer, MDBDataTable,MDBTabPane, MDBTabContent,MDBNav, MDBNavItem, MDBNavLink} from 'mdbreact';\nimport SpendingEntryModal from \"./SpendingEntryModal\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport './SpendingTableEntries.css';\nimport Statistics from \"./Statistics\";\nimport * as Sentry from \"@sentry/react\";\n\nconst TablePage = (props) => {\n    const [spending,setSpending] = useState(null);\n    const [totalAmount, setTotalAmount] = useState(null);\n    const [activeItem, setActiveItem] = useState(\"1\");\n    const [mostExpItem, setMostExpItem] = useState(null);\n    const [mostExpItemName, setMostExpItemName] = useState(\"\");\n    const [travel, setTravel] = useState(0);\n    const [groceries, setGroceries] = useState(0);\n    const [clothes, setClothes] = useState(0);\n    const [elect, setElect] = useState(0);\n    const [hobby, setHobby] = useState(0);\n    const [gift, setGift] = useState(0);\n    const [appPayments, setAppPayments] = useState(0);\n    const [uncategorized, setUncategorized] = useState(0);\n\n    const toggle = tab => {\n        if (activeItem !== tab) {\n            setActiveItem(tab);\n        }\n    };\n\n    const data = {\n        columns: [\n            {\n                label: 'Item',\n                field: 'item',\n                sort: 'asc'\n            },\n            {\n                label: 'Item Category',\n                field: 'category',\n                sort: 'asc'\n            },\n            {\n                label: 'Cost',\n                field: 'price',\n                sort: 'asc'\n            },\n            {\n                label: 'Date',\n                field: 'paid_at',\n                sort: 'asc'\n            }\n\n        ],\n        rows: spending || []\n    }\n\n    const getEntries = () => {\n        axios({\n            method: \"POST\",\n            data: {\n                username: props.user\n            },\n            withCredentials: true,\n            url: \"https://budget-manager-app28.herokuapp.com/spending\",\n        }).then((res) => {\n            if(res.data !== {}){\n                let arr = [];\n                let obj = {};\n                let total_amount_arr = [];\n                let total_travel = [];\n                let total_groceries = [];\n                let total_clothes = [];\n                let total_gift = [];\n                let total_hobby = [];\n                let total_elect = [];\n                let total_app_pay = [];\n                let total_uncategorized = [];\n                res.data.forEach(item => {\n                    obj = {\n                        item: item.item,\n                        category: item.category,\n                        price: 'â‚¬ ' + item.price,\n                        paid_at: item.paid_at\n                    }\n\n                    // totals\n                    total_amount_arr.push(Number(item.price));\n\n                    // totals for each category\n                    if(item.category === \"Travel\"){\n                        total_travel.push(Number(item.price));\n                    }else if(item.category === \"Groceries\") {\n                        total_groceries.push(Number(item.price));\n                    }else if(item.category === \"Clothes\") {\n                        total_clothes.push(Number(item.price));\n                    }else if(item.category === \"Electronics\") {\n                        total_elect.push(Number(item.price));\n                    }else if(item.category === \"Hobby\") {\n                        total_hobby.push(Number(item.price));\n                    }else if(item.category === \"Gift\") {\n                        total_gift.push(Number(item.price));\n                    }else if(item.category === \"App Payments\") {\n                        total_app_pay.push(Number(item.price));\n                    }else {\n                        total_uncategorized.push(Number(item.price));\n                    }\n\n                    arr.push(obj);\n                });\n\n                if(arr.length > 0){\n                    // travel total\n                    if(total_travel.length > 0) {\n                        const travel_total = total_travel.reduce((a,b) => {\n                            return a + b;\n                        },0);\n                        setTravel(travel_total);\n                    }else {\n                        setTravel(0)\n                    }\n\n                    // groceries total\n                    if(total_groceries.length > 0) {\n                        const groceries_total = total_groceries.reduce((a,b) => {\n                            return a + b;\n                        },0);\n                        setGroceries(groceries_total);\n                    }else {\n                        setGroceries(0);\n                    }\n\n                    // clothes total\n                    if(total_clothes.length > 0){\n                        const clothes_total = total_clothes.reduce((a,b) => {\n                            return a + b;\n                        },0);\n                        setClothes(clothes_total);\n                    }else {\n                        setClothes(0);\n                    }\n\n                    // electronics total\n                    if(total_elect.length > 0){\n                        const elect_total = total_elect.reduce((a,b) => {\n                            return a + b;\n                        });\n                        setElect(elect_total);\n                    }else {\n                        setElect(0);\n                    }\n\n                    // hobby total\n                    if(total_hobby.length > 0){\n                        const hobby_total = total_hobby.reduce((a,b) => {\n                            return a + b;\n                        });\n                        setHobby(hobby_total);\n                    }else {\n                        setHobby(0);\n                    }\n\n                    // gift total\n                    if(total_gift.length > 0){\n                        const gift_total = total_gift.reduce((a,b) => {\n                            return a + b;\n                        });\n                        setGift(gift_total);\n                    }else {\n                        setGift(0);\n                    }\n\n                    // app payments total\n                    if(total_app_pay.length > 0){\n                        const appPayments_total = total_app_pay.reduce((a,b) => {\n                            return a + b;\n                        });\n                        setAppPayments(appPayments_total);\n                    }else {\n                        setAppPayments(0);\n                    }\n\n                    // uncategorized total\n                    if(total_uncategorized.length > 0){\n                        const uncategorized_total = total_uncategorized.reduce((a,b) => {\n                            return a + b;\n                        });\n                        setUncategorized(uncategorized_total);\n                    }else {\n                        setUncategorized(0);\n                    }\n\n                    // most expensive item so far\n                    const most_exp_item = Math.max(...total_amount_arr);\n                        \n                    // get most expensive item name so far\n                    const getMostExpItemName = arr.filter(mostExpItemName => {\n                        return mostExpItemName.price === 'â‚¬ ' + most_exp_item;\n                    });\n\n                    // most expensive item name\n                    const mostExpItemName = getMostExpItemName[0].item;\n\n                    // total amount spend\n                    let sum_total_amount = total_amount_arr.reduce((a,b) => {\n                        return a + b;\n                    },0);\n\n                    setTimeout(() => {\n                        setMostExpItem(most_exp_item.toFixed(2));\n                        setTotalAmount(sum_total_amount.toFixed(2));\n                        setMostExpItemName(mostExpItemName);\n                    },1000);\n\n                    setSpending([...arr]);\n                }\n            }else {\n                Swal.fire({\n                    icon: 'error',\n                    title: 'Error with getting entries, please try again later.'\n                });\n            }\n        });\n    };\n\n    useEffect(()=> {\n        getEntries();\n    },[]);\n    \n    return (\n        <>\n            <br/><br/>\n            <MDBContainer>\n                <MDBNav className=\"nav-tabs mt-5\">\n                    <MDBNavItem>\n                        <MDBNavLink link to=\"#\" active={activeItem === \"1\"} onClick={() => toggle(\"1\")} role=\"tab\" >\n                            Spending Breakdown\n                        </MDBNavLink>\n                    </MDBNavItem>\n                    <MDBNavItem>\n                        <MDBNavLink link to=\"#\" active={activeItem === \"2\"} onClick={() => toggle(\"2\")} role=\"tab\" >\n                            Income Breakdown\n                        </MDBNavLink>\n                    </MDBNavItem>\n                    <MDBNavItem>\n                        <MDBNavLink link to=\"#\" active={activeItem === \"3\"} onClick={() => toggle(\"3\")} role=\"tab\" >\n                            Statistics\n                        </MDBNavLink>\n                    </MDBNavItem>\n                </MDBNav>\n                <MDBTabContent activeItem={activeItem} >\n                    <MDBTabPane tabId=\"1\" role=\"tabpanel\">\n                        <br/>\n                        <div>\n                            {/* <h1 style={{marginRight: 15, marginTop: 25}}>Spending Breakdown</h1> */}\n                            <SpendingEntryModal user={props.user} entryAdded={getEntries}/>\n                        </div>\n                        <br/>\n                        <MDBDataTable responsive striped bordered small data={data} paging={true} sortable={false} info={true}/>\n                    </MDBTabPane>\n                    <MDBTabPane tabId=\"2\" role=\"tabpanel\">\n                         \n                    </MDBTabPane>\n                    <MDBTabPane tabId=\"3\" role=\"tabpanel\">\n                        <Statistics\n                        travel={travel}\n                        groceries={groceries}\n                        clothes={clothes}\n                        elect={elect}\n                        hobby={hobby}\n                        gift={gift}\n                        appPayments={appPayments}\n                        uncategorized={uncategorized} \n                        totalAmount={totalAmount} \n                        mostExpItem={mostExpItem} \n                        mostExpItemName={mostExpItemName}/> \n                    </MDBTabPane>\n                </MDBTabContent>\n            </MDBContainer>\n        </>\n    );\n};\n\nexport default Sentry.withProfiler(TablePage);","/Users/branislavbuna/Desktop/react-budget-manager/src/components/SpendingEntryModal.js",[],"/Users/branislavbuna/Desktop/react-budget-manager/src/components/Statistics.js",[],"/Users/branislavbuna/Desktop/react-budget-manager/src/components/UserProfile.js",[],"/Users/branislavbuna/Desktop/react-budget-manager/src/serviceWorkerRegistration.js",[],"/Users/branislavbuna/Desktop/react-budget-manager/src/LandingPage.js",[],"/Users/branislavbuna/Desktop/react-budget-manager/src/components/Footer.js",["55"],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":228,"column":7,"nodeType":"62","endLine":228,"endColumn":9,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":28,"column":29,"nodeType":"66","endLine":28,"endColumn":55},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getEntries'. Either include it or remove the dependency array.","ArrayExpression",["69"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},"Update the dependencies array to be: [getEntries]",{"range":"72","text":"73"},[8347,8349],"[getEntries]"]