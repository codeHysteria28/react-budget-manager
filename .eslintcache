[{"/Users/branislavbuna/Desktop/budget-manager/src/index.js":"1","/Users/branislavbuna/Desktop/budget-manager/src/components/signUp/Signup.js":"2","/Users/branislavbuna/Desktop/budget-manager/src/components/Login.js":"3","/Users/branislavbuna/Desktop/budget-manager/src/components/Dashboard.js":"4","/Users/branislavbuna/Desktop/budget-manager/src/components/Header.js":"5","/Users/branislavbuna/Desktop/budget-manager/src/components/TestChart.js":"6","/Users/branislavbuna/Desktop/budget-manager/src/components/SpendingTableEntries.js":"7","/Users/branislavbuna/Desktop/budget-manager/src/components/SpendingEntryModal.js":"8"},{"size":814,"mtime":1610384357439,"results":"9","hashOfConfig":"10"},{"size":5020,"mtime":1610616970877,"results":"11","hashOfConfig":"10"},{"size":2277,"mtime":1610617043702,"results":"12","hashOfConfig":"10"},{"size":1691,"mtime":1610617034889,"results":"13","hashOfConfig":"10"},{"size":1343,"mtime":1610471333797,"results":"14","hashOfConfig":"10"},{"size":1335,"mtime":1610469185178,"results":"15","hashOfConfig":"10"},{"size":2524,"mtime":1610617590390,"results":"16","hashOfConfig":"10"},{"size":3596,"mtime":1610617059700,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"113eqpw",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/branislavbuna/Desktop/budget-manager/src/index.js",[],["37","38"],"/Users/branislavbuna/Desktop/budget-manager/src/components/signUp/Signup.js",[],"/Users/branislavbuna/Desktop/budget-manager/src/components/Login.js",[],"/Users/branislavbuna/Desktop/budget-manager/src/components/Dashboard.js",[],"/Users/branislavbuna/Desktop/budget-manager/src/components/Header.js",[],"/Users/branislavbuna/Desktop/budget-manager/src/components/TestChart.js",[],"/Users/branislavbuna/Desktop/budget-manager/src/components/SpendingTableEntries.js",["39"],"import React, {useState,useEffect} from 'react';\nimport { MDBContainer, MDBTable, MDBTableBody, MDBTableHead} from 'mdbreact';\nimport SpendingEntryModal from \"./SpendingEntryModal\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\n\n\nconst TablePage = (props) => {\n    const [spending,setSpending] = useState(null);\n\n    const data = {\n        columns: [\n            {\n                label: '_id',\n                field: '_id',\n                sort: 'asc'\n            },\n            {\n                label: 'Item',\n                field: 'item',\n                sort: 'asc'\n            },\n            {\n                label: 'Cost',\n                field: 'price',\n                sort: 'asc'\n            },\n            {\n                label: 'Date',\n                field: 'paid_at',\n                sort: 'asc'\n            }\n\n        ],\n        rows: spending\n    }\n\n    const getEntries = () => {\n        axios({\n            method: \"POST\",\n            data: {\n                username: props.user\n            },\n            withCredentials: true,\n            url: \"/spending\",\n        }).then((res) => {\n            if(res.data !== {}){\n                let arr = [];\n                let obj = {};\n                res.data.forEach(item => {\n                    if(item._id.length > 10){\n                        item._id = item._id.substring(0,10);\n                    }\n                    obj = {\n                        _id: item._id,\n                        item: item.item,\n                        price: 'â‚¬ ' + item.price,\n                        paid_at: item.paid_at\n                    }\n                    arr.push(obj);\n                });\n                setSpending(arr);\n            }else {\n                Swal.fire({\n                    icon: 'error',\n                    title: 'Error with getting entries, please try again later.'\n                });\n            }\n        });\n    }\n\n    useEffect(()=> {\n       getEntries();\n    },[getEntries]);\n\n    return (\n        <>\n            <br/><br/>\n            <MDBContainer>\n                <div>\n                    <h1 style={{marginRight: 15}}>Spending Table Breakdown</h1>\n                    <SpendingEntryModal user={props.user}/>\n                </div>\n                <br/>\n                <MDBTable responsiveSm>\n                    <MDBTableHead columns={data.columns} />\n                    <MDBTableBody rows={data.rows} />\n                </MDBTable>\n            </MDBContainer>\n        </>\n    );\n};\n\nexport default TablePage;","/Users/branislavbuna/Desktop/budget-manager/src/components/SpendingEntryModal.js",[],["40","41"],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":38,"column":11,"nodeType":"48","endLine":70,"endColumn":6},{"ruleId":"42","replacedBy":"49"},{"ruleId":"44","replacedBy":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","The 'getEntries' function makes the dependencies of useEffect Hook (at line 74) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'getEntries' in its own useCallback() Hook.","VariableDeclarator",["51"],["52"],"no-global-assign","no-unsafe-negation"]