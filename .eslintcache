[{"/Users/branislavbuna/Desktop/react-budget-manager/src/index.js":"1","/Users/branislavbuna/Desktop/react-budget-manager/src/components/Dashboard.js":"2","/Users/branislavbuna/Desktop/react-budget-manager/src/components/Login.js":"3","/Users/branislavbuna/Desktop/react-budget-manager/src/components/signUp/Signup.js":"4","/Users/branislavbuna/Desktop/react-budget-manager/src/components/Header.js":"5","/Users/branislavbuna/Desktop/react-budget-manager/src/components/SpendingTableEntries.js":"6","/Users/branislavbuna/Desktop/react-budget-manager/src/components/SpendingEntryModal.js":"7","/Users/branislavbuna/Desktop/react-budget-manager/src/components/Statistics.js":"8","/Users/branislavbuna/Desktop/react-budget-manager/src/components/UserProfile.js":"9","/Users/branislavbuna/Desktop/react-budget-manager/src/serviceWorkerRegistration.js":"10","/Users/branislavbuna/Desktop/react-budget-manager/src/LandingPage.js":"11","/Users/branislavbuna/Desktop/react-budget-manager/src/components/Footer.js":"12"},{"size":1697,"mtime":1618418896813,"results":"13","hashOfConfig":"14"},{"size":1938,"mtime":1618481148527,"results":"15","hashOfConfig":"14"},{"size":2567,"mtime":1618423253066,"results":"16","hashOfConfig":"14"},{"size":7214,"mtime":1618420214768,"results":"17","hashOfConfig":"14"},{"size":4600,"mtime":1618481873654,"results":"18","hashOfConfig":"14"},{"size":10975,"mtime":1618744561732,"results":"19","hashOfConfig":"14"},{"size":5439,"mtime":1616419539153,"results":"20","hashOfConfig":"14"},{"size":4189,"mtime":1618744245471,"results":"21","hashOfConfig":"14"},{"size":15720,"mtime":1618749323425,"results":"22","hashOfConfig":"14"},{"size":4981,"mtime":1616412851893,"results":"23","hashOfConfig":"14"},{"size":5027,"mtime":1618481850425,"results":"24","hashOfConfig":"14"},{"size":1942,"mtime":1618481408837,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1m3t0n2",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"/Users/branislavbuna/Desktop/react-budget-manager/src/index.js",[],["55","56"],"/Users/branislavbuna/Desktop/react-budget-manager/src/components/Dashboard.js",[],"/Users/branislavbuna/Desktop/react-budget-manager/src/components/Login.js",[],"/Users/branislavbuna/Desktop/react-budget-manager/src/components/signUp/Signup.js",[],"/Users/branislavbuna/Desktop/react-budget-manager/src/components/Header.js",[],"/Users/branislavbuna/Desktop/react-budget-manager/src/components/SpendingTableEntries.js",["57"],"import React, {useState,useEffect} from 'react';\nimport { MDBContainer, MDBDataTable,MDBTabPane, MDBTabContent,MDBNav, MDBNavItem, MDBNavLink} from 'mdbreact';\nimport SpendingEntryModal from \"./SpendingEntryModal\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport './SpendingTableEntries.css';\nimport Statistics from \"./Statistics\";\nimport * as Sentry from \"@sentry/react\";\nimport toast, { Toaster } from 'react-hot-toast';\n\nconst TablePage = (props) => {\n    const [spending,setSpending] = useState(null);\n    const [totalAmount, setTotalAmount] = useState(null);\n    const [activeItem, setActiveItem] = useState(\"1\");\n    const [mostExpItem, setMostExpItem] = useState(null);\n    const [mostExpItemName, setMostExpItemName] = useState(\"\");\n    const [travel, setTravel] = useState(0);\n    const [groceries, setGroceries] = useState(0);\n    const [clothes, setClothes] = useState(0);\n    const [elect, setElect] = useState(0);\n    const [hobby, setHobby] = useState(0);\n    const [gift, setGift] = useState(0);\n    const [appPayments, setAppPayments] = useState(0);\n    const [uncategorized, setUncategorized] = useState(0);\n\n    const data_loaded = () => toast.success('Data loaded successfully.');\n\n    const toggle = tab => {\n        if (activeItem !== tab) {\n            setActiveItem(tab);\n        }\n    };\n\n    const data = {\n        columns: [\n            {\n                label: 'Item',\n                field: 'item',\n                sort: 'asc'\n            },\n            {\n                label: 'Item Category',\n                field: 'category',\n                sort: 'asc'\n            },\n            {\n                label: 'Cost',\n                field: 'price',\n                sort: 'asc'\n            },\n            {\n                label: 'Date',\n                field: 'paid_at',\n                sort: 'asc'\n            }\n\n        ],\n        rows: spending || []\n    }\n\n    const getEntries = () => {\n        axios({\n            method: \"POST\",\n            data: {\n                username: props.user\n            },\n            withCredentials: true,\n            url: \"https://budget-manager-app28.herokuapp.com/spending\",\n        }).then((res) => {\n            if(res.data !== {}){\n                let arr = [];\n                let obj = {};\n                let total_amount_arr = [];\n                let total_travel = [];\n                let total_groceries = [];\n                let total_clothes = [];\n                let total_gift = [];\n                let total_hobby = [];\n                let total_elect = [];\n                let total_app_pay = [];\n                let total_uncategorized = [];\n                res.data.forEach(item => {\n                    obj = {\n                        item: item.item,\n                        category: item.category,\n                        price: '€ ' + item.price,\n                        paid_at: item.paid_at\n                    }\n\n                    // totals\n                    total_amount_arr.push(Number(item.price));\n\n                    // totals for each category\n                    if(item.category === \"Travel\"){\n                        total_travel.push(Number(item.price));\n                    }else if(item.category === \"Groceries\") {\n                        total_groceries.push(Number(item.price));\n                    }else if(item.category === \"Clothes\") {\n                        total_clothes.push(Number(item.price));\n                    }else if(item.category === \"Electronics\") {\n                        total_elect.push(Number(item.price));\n                    }else if(item.category === \"Hobby\") {\n                        total_hobby.push(Number(item.price));\n                    }else if(item.category === \"Gift\") {\n                        total_gift.push(Number(item.price));\n                    }else if(item.category === \"App Payments\") {\n                        total_app_pay.push(Number(item.price));\n                    }else {\n                        total_uncategorized.push(Number(item.price));\n                    }\n\n                    arr.push(obj);\n                });\n\n                if(arr.length > 0){\n                    // travel total\n                    if(total_travel.length > 0) {\n                        const travel_total = total_travel.reduce((a,b) => {\n                            return a + b;\n                        },0);\n                        setTravel(travel_total);\n                    }else {\n                        setTravel(0)\n                    }\n\n                    // groceries total\n                    if(total_groceries.length > 0) {\n                        const groceries_total = total_groceries.reduce((a,b) => {\n                            return a + b;\n                        },0);\n                        setGroceries(groceries_total);\n                    }else {\n                        setGroceries(0);\n                    }\n\n                    // clothes total\n                    if(total_clothes.length > 0){\n                        const clothes_total = total_clothes.reduce((a,b) => {\n                            return a + b;\n                        },0);\n                        setClothes(clothes_total);\n                    }else {\n                        setClothes(0);\n                    }\n\n                    // electronics total\n                    if(total_elect.length > 0){\n                        const elect_total = total_elect.reduce((a,b) => {\n                            return a + b;\n                        });\n                        setElect(elect_total);\n                    }else {\n                        setElect(0);\n                    }\n\n                    // hobby total\n                    if(total_hobby.length > 0){\n                        const hobby_total = total_hobby.reduce((a,b) => {\n                            return a + b;\n                        });\n                        setHobby(hobby_total);\n                    }else {\n                        setHobby(0);\n                    }\n\n                    // gift total\n                    if(total_gift.length > 0){\n                        const gift_total = total_gift.reduce((a,b) => {\n                            return a + b;\n                        });\n                        setGift(gift_total);\n                    }else {\n                        setGift(0);\n                    }\n\n                    // app payments total\n                    if(total_app_pay.length > 0){\n                        const appPayments_total = total_app_pay.reduce((a,b) => {\n                            return a + b;\n                        });\n                        setAppPayments(appPayments_total);\n                    }else {\n                        setAppPayments(0);\n                    }\n\n                    // uncategorized total\n                    if(total_uncategorized.length > 0){\n                        const uncategorized_total = total_uncategorized.reduce((a,b) => {\n                            return a + b;\n                        });\n                        setUncategorized(uncategorized_total);\n                    }else {\n                        setUncategorized(0);\n                    }\n\n                    // most expensive item so far\n                    const most_exp_item = Math.max(...total_amount_arr);\n                        \n                    // get most expensive item name so far\n                    const getMostExpItemName = arr.filter(mostExpItemName => {\n                        return mostExpItemName.price === '€ ' + most_exp_item;\n                    });\n\n                    // most expensive item name\n                    const mostExpItemName = getMostExpItemName[0].item;\n\n                    // total amount spend\n                    let sum_total_amount = total_amount_arr.reduce((a,b) => {\n                        return a + b;\n                    },0);\n\n                    setTimeout(() => {\n                        setMostExpItem(most_exp_item.toFixed(2));\n                        setTotalAmount(sum_total_amount.toFixed(2));\n                        setMostExpItemName(mostExpItemName);\n                    },1000);\n\n                    setSpending([...arr]);\n                }\n                data_loaded();\n            }else {\n                Swal.fire({\n                    icon: 'error',\n                    title: 'Error with getting entries, please try again later.'\n                });\n            }\n        });\n    };\n\n    useEffect(()=> {\n        getEntries();\n    },[]);\n    \n    return (\n        <>\n            <br/><br/>\n            <MDBContainer>\n                <MDBNav className=\"nav-tabs mt-5\">\n                    <MDBNavItem>\n                        <MDBNavLink link to=\"#\" active={activeItem === \"1\"} onClick={() => toggle(\"1\")} role=\"tab\" >\n                            Spending Breakdown\n                        </MDBNavLink>\n                    </MDBNavItem>\n                    <MDBNavItem>\n                        <MDBNavLink link to=\"#\" active={activeItem === \"2\"} onClick={() => toggle(\"2\")} role=\"tab\" >\n                            Income Breakdown\n                        </MDBNavLink>\n                    </MDBNavItem>\n                    <MDBNavItem>\n                        <MDBNavLink link to=\"#\" active={activeItem === \"3\"} onClick={() => toggle(\"3\")} role=\"tab\" >\n                            Statistics\n                        </MDBNavLink>\n                    </MDBNavItem>\n                </MDBNav>\n                <MDBTabContent activeItem={activeItem} >\n                    <MDBTabPane tabId=\"1\" role=\"tabpanel\">\n                        <br/>\n                        <div>\n                            {/* <h1 style={{marginRight: 15, marginTop: 25}}>Spending Breakdown</h1> */}\n                            <SpendingEntryModal user={props.user} entryAdded={getEntries}/>\n                        </div>\n                        <br/>\n                        <MDBDataTable responsive striped bordered small data={data} paging={true} sortable={false} info={true}/>\n                    </MDBTabPane>\n                    <MDBTabPane tabId=\"2\" role=\"tabpanel\">\n                         \n                    </MDBTabPane>\n                    <MDBTabPane tabId=\"3\" role=\"tabpanel\">\n                        <Statistics\n                        travel={travel}\n                        groceries={groceries}\n                        clothes={clothes}\n                        elect={elect}\n                        hobby={hobby}\n                        gift={gift}\n                        appPayments={appPayments}\n                        uncategorized={uncategorized} \n                        totalAmount={totalAmount} \n                        mostExpItem={mostExpItem} \n                        mostExpItemName={mostExpItemName}/> \n                    </MDBTabPane>\n                </MDBTabContent>\n                <Toaster/>\n            </MDBContainer>\n        </>\n    );\n};\n\nexport default Sentry.withProfiler(TablePage);","/Users/branislavbuna/Desktop/react-budget-manager/src/components/SpendingEntryModal.js",[],"/Users/branislavbuna/Desktop/react-budget-manager/src/components/Statistics.js",[],["58","59"],"/Users/branislavbuna/Desktop/react-budget-manager/src/components/UserProfile.js",["60"],"import React from 'react';\nimport Header from './Header';\nimport jwt_decode from \"jwt-decode\";\nimport Cookies from 'universal-cookie';\nimport axios from \"axios\";\nimport Swal from 'sweetalert2';\nimport { MDBContainer, MDBBtn, MDBRow, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\nimport userPlaceholder from '../images/user.png';\nimport kofi from '../images/kofi.png';\nimport * as Sentry from \"@sentry/react\";\nimport './UserProfile.css';\nimport toast, { Toaster } from 'react-hot-toast';\n\nconst loaded_user_profile = () => toast.success('Successfully loaded user profile.');\nconst avatar_uploaded = () => toast.success('Avatar uploaded.');\nconst avatar_upload_err = () => toast.error('Error with uploading avatar.');\nconst budget_updated = () => toast.success('Monthly budget was changed successfully.');\nconst budget_update_err = () => toast.error('Error with updating monthly budget.');\n\nclass UserProfile extends React.Component{\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: null,\n            auth: false,\n            username: null,\n            user_id: null,\n            userProfile: null,\n            modal: false,\n            file: null,\n            avatar: '',\n            budgetModal: false,\n            budget: null,\n            new_budget: null\n        }\n\n        this.cookies = new Cookies()\n    }\n\n    userProfile = username => {\n        axios({\n            method: \"post\",\n            url: \"https://budget-manager-app28.herokuapp.com/getProfile\",\n            withCredentials: true,\n            data: {user: username}\n        }).then((res) => {\n            this.setState({userProfile: res.data});\n            this.setState({budget: res.data.monthlyBudget});\n            loaded_user_profile();\n        });\n    }\n\n    arrayBufferToBase64 = buffer => {\n        let binary = '';\n        let bytes = [].slice.call(new Uint8Array(buffer));\n\n        bytes.forEach((b) => binary += String.fromCharCode(b));\n\n        return window.btoa(binary);\n    }\n\n    getUserAvatar = username => {\n        axios({\n            method: \"post\",\n            url: \"https://budget-manager-app28.herokuapp.com/get_avatar\",\n            withCredentials: true,\n            data: {user: username}\n        }).then((res) => {\n            let base64Flag = `data:${res.data.contentType};base64,`;\n            let imageStr = this.arrayBufferToBase64(res.data.avatar.data);\n            this.setState({avatar: base64Flag + imageStr})\n        });\n    }\n\n    logout = () => {\n        axios({\n            method: \"post\",\n            url: \"https://budget-manager-app28.herokuapp.com/logout\",\n            withCredentials: true,\n        }).then((res) => {\n            this.cookies.remove('token');\n            window.location = '/login';\n        });\n    }\n\n    getUser = () => {\n        const token = this.cookies.get('token');\n        if(!token) {\n            Swal.fire({\n                icon: 'error',\n                title: 'Error with authentication, please try again later.'\n            });\n\n            setTimeout(() => {\n                this.logout();\n            }, 2000);\n        }else {\n            const dekode_jwt = jwt_decode(token);\n            this.setState({username: dekode_jwt.username});\n            this.setState({user_id: dekode_jwt._id});\n            this.setState({auth: true});\n            this.userProfile(dekode_jwt.username);\n            this.getUserAvatar(dekode_jwt.username);\n        }\n    }\n\n    deleteUser = () => {\n        Swal.fire({\n            icon: 'info',\n            title: 'Are you sure to delete your account ?',\n            showDenyButton: false,\n            showCancelButton: true,\n            confirmButtonText: `Delete Permanently`,\n        }).then((result) => {\n            if (result.isConfirmed) {\n                axios({\n                    method: \"post\",\n                    url: \"https://budget-manager-app28.herokuapp.com/deleteUser\",\n                    data: {username: this.state.username},\n                    withCredentials: true,\n                }).then((res) => {\n                    Swal.fire({\n                        icon: 'success',\n                        title: `${res.data}`,\n                        text: 'You will be logged out ...'\n                    });\n\n                    setTimeout(() => {\n                        this.logout();\n                    }, 1500)\n                });\n            }\n        })\n    }\n\n    toggle = () => {\n        this.setState({modal: !this.state.modal});\n    }\n\n    budgetToggle = () => {\n        this.setState({budgetModal: !this.state.budgetModal});\n    }\n\n    saveImg = (e) => {\n        const selectedFile = e.target.files[0];\n        this.setState({\n            file: selectedFile,\n            loaded: 0\n        });\n    }\n\n    uploadAvatar = () => {\n        const data = new FormData();\n        data.append('avatar', this.state.file);\n        data.append('username', this.state.username);\n\n        axios({\n            method: \"post\",\n            url: \"https://budget-manager-app28.herokuapp.com/add_avatar\",\n            withCredentials: true,\n            data: data\n        }).then(res => {\n            this.getUserAvatar(this.state.username);\n            this.toggle();\n            if(res.data === \"success\") {\n                avatar_uploaded();\n            }else {\n                avatar_upload_err();\n            }\n        });\n    }\n\n    changeBudget = (e) => {\n        const new_budget = Number(e.target.value);\n        this.setState({new_budget: new_budget});\n    }\n\n    updateBudget = () => {\n        if(this.state.new_budget !== null || this.state.new_budget !== undefined) {\n            axios({\n                method: \"post\",\n                url: \"https://budget-manager-app28.herokuapp.com/changeBudget\",\n                withCredentials: true,\n                data: {new_budget: this.state.new_budget, username: this.state.username}\n            }).then(res => {\n                if(res.data === \"success\") {\n                    this.budgetToggle();\n                    this.getUser();\n                    budget_updated();\n                }else {\n                    budget_update_err();\n                }\n            })\n        }else {\n            budget_update_err();\n        }\n    }\n\n    componentDidMount() {\n        this.getUser();\n    }\n\n    render(){\n        return (\n            <div>\n                {this.state.auth \n                ? \n                <div>\n                    <Header user={this.state.username} logout={this.logout} loc=\"dashboard\"/>\n                    <br/>\n                    <MDBContainer>\n                        <MDBRow>\n                            <MDBCol sm=\"6\" md=\"4\">\n                                <MDBCard>\n                                    <button onClick={this.toggle} className=\"avatar_handler\">\n                                        <MDBCardImage style={{marginTop: 10}} className=\"img-fluid\" src={this.state.avatar === '' ? userPlaceholder : this.state.avatar}/>\n                                    </button>\n                                    <MDBCardBody>\n                                        <MDBCardTitle className=\"text-center\">{this.state.username}</MDBCardTitle>\n                                        <MDBCardText className=\"text-center\">Focusing on my spending.</MDBCardText>\n                                    </MDBCardBody>\n                                </MDBCard>\n                            </MDBCol>\n                            <MDBCol sm=\"6\" md=\"8\">\n                                <MDBCard style={{marginBottom: 32}}>\n                                    {this.state.userProfile ? \n                                        <MDBCardBody style={{padding: \"2rem\"}}>\n                                        <MDBRow>\n                                            <MDBCol style={{ maxWidth: \"15rem\" }}>\n                                                Full Name\n                                            </MDBCol>\n                                            <MDBCol>\n                                                <small>{this.state.userProfile.fullName}</small>\n                                            </MDBCol>\n                                        </MDBRow>\n                                        <hr  style={{\n                                                color: '#2BBBAD',\n                                                backgroundColor: '#2BBBAD',\n                                                height: .2,\n                                                borderColor : '#2BBBAD'\n                                        }}/>\n                                        <MDBRow>\n                                            <MDBCol style={{ maxWidth: \"15rem\" }}>\n                                                Email\n                                            </MDBCol>\n                                            <MDBCol>\n                                                <small>{this.state.userProfile.email}</small>\n                                            </MDBCol>\n                                        </MDBRow>\n                                        <hr  style={{\n                                                color: '#2BBBAD',\n                                                backgroundColor: '#2BBBAD',\n                                                height: .2,\n                                                borderColor : '#2BBBAD'\n                                        }}/>\n                                        <MDBRow>\n                                            <MDBCol style={{ maxWidth: \"15rem\" }}>\n                                                Phone\n                                            </MDBCol>\n                                            <MDBCol>\n                                                <small>{this.state.userProfile.phone}</small>\n                                            </MDBCol>\n                                        </MDBRow>\n                                        <hr  style={{\n                                                color: '#2BBBAD',\n                                                backgroundColor: '#2BBBAD',\n                                                height: .2,\n                                                borderColor : '#2BBBAD'\n                                        }}/>\n                                         <MDBRow>\n                                            <MDBCol style={{ maxWidth: \"15rem\" }}>\n                                                Monthly Budget\n                                            </MDBCol>\n                                            <MDBCol>\n                                                <small>{this.state.userProfile.monthlyBudget} €</small>\n                                            </MDBCol>\n                                        </MDBRow>\n                                        <a onClick={this.budgetToggle}><small className=\"text-success\">Change budget</small></a>\n                                        <hr  style={{\n                                                color: '#2BBBAD',\n                                                backgroundColor: '#2BBBAD',\n                                                height: .2,\n                                                borderColor : '#2BBBAD'\n                                        }}/>\n                                        <MDBRow>\n                                            <MDBCol style={{ maxWidth: \"15rem\" }}>\n                                                User from\n                                            </MDBCol>\n                                            <MDBCol>\n                                                <small>{this.state.userProfile.created_at}</small>\n                                            </MDBCol>\n                                        </MDBRow>\n                                        <hr  style={{\n                                                color: '#2BBBAD',\n                                                backgroundColor: '#2BBBAD',\n                                                height: .2,\n                                                borderColor : '#2BBBAD'\n                                        }}/>\n                                    </MDBCardBody> : \"\"\n                                    }\n                                </MDBCard>\n                                <div className=\"profile_btns\">\n                                    <MDBBtn>Edit Profile</MDBBtn>\n                                    <MDBBtn color=\"danger\" onClick={this.deleteUser}>Delete Account</MDBBtn>\n                                    <a href=\"https://www.buymeacoffee.com/branislavbuna\" target=\"blank\">\n                                        <MDBBtn className=\"support_btn\">\n                                            <img src={kofi} alt=\"buy me a coffee logo\" className=\"kofi\"/>\n                                            Support Creator\n                                        </MDBBtn>\n                                    </a>\n                                </div>\n                            </MDBCol>\n                        </MDBRow>\n                        <MDBModal isOpen={this.state.modal} toggle={this.toggle}>\n                            <MDBModalHeader toggle={this.toggle}>Avatar Upload</MDBModalHeader>\n                            <MDBModalBody>\n                            <div className=\"input-group\">\n                                <div className=\"custom-file\">\n                                    <input\n                                    type=\"file\"\n                                    className=\"custom-file-input\"\n                                    id=\"inputGroupFile01\"\n                                    onChange={this.saveImg}\n                                    name=\"avatar\"\n                                    />\n                                    <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\n                                    Choose file\n                                    </label>\n                                </div>\n                            </div>\n                            </MDBModalBody>\n                            <MDBModalFooter>\n                                <MDBBtn color=\"secondary\" onClick={this.toggle}>Close</MDBBtn>\n                                <MDBBtn color=\"primary\" onClick={this.uploadAvatar}>Upload</MDBBtn>\n                            </MDBModalFooter>\n                        </MDBModal>\n\n                        <MDBModal isOpen={this.state.budgetModal} toggle={this.budgetToggle}>\n                            <MDBModalHeader>Change Budget</MDBModalHeader>\n                            <MDBModalBody>\n                                <input\n                                    type=\"number\"\n                                    className=\"form-control\"\n                                    name=\"budget\"\n                                    placeholder={'Current budget: ' + this.state.budget + '€'}\n                                    onChange={this.changeBudget}\n                                />\n                            </MDBModalBody>\n                            <MDBModalFooter>\n                                <MDBBtn color=\"secondary\" onClick={this.budgetToggle}>Close</MDBBtn>\n                                <MDBBtn color=\"primary\" onClick={this.updateBudget}>Change Budget</MDBBtn>\n                            </MDBModalFooter>\n                        </MDBModal>\n                        <Toaster />\n                    </MDBContainer>\n                </div>\n                : \"\"\n                }\n            </div>\n        );\n    }\n}\n\nexport default Sentry.withProfiler(UserProfile);","/Users/branislavbuna/Desktop/react-budget-manager/src/serviceWorkerRegistration.js",[],"/Users/branislavbuna/Desktop/react-budget-manager/src/LandingPage.js",[],"/Users/branislavbuna/Desktop/react-budget-manager/src/components/Footer.js",["61"],"import React from 'react';\nimport * as Sentry from \"@sentry/react\";\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\nimport './Footer.css';\n\nconst Footer = () => {\n    return(\n        <MDBFooter color=\"default-color\" className=\"font-small pt-4 mt-4\">\n            <MDBContainer fluid className=\"text-center text-md-left\">\n                <MDBRow>\n                <MDBCol md=\"6\">\n                    <h5 className=\"title\">Budgeter Club</h5>\n                    <small>Alpha v1.0</small>\n                    <p>Created with ❤️ by <a href=\"https://twitter.com/Chewbacca_w0w\" target=\"blank\">@Chewbacca_w0w</a></p>\n                </MDBCol>\n                <MDBCol md=\"6\">\n                    <h5 className=\"title\">Links</h5>\n                    <ul>\n                        <li className=\"list-unstyled\">\n                            <a href=\"https://www.buymeacoffee.com/branislavbuna\" target=\"blank\">Buy me a coffee</a>\n                        </li>\n                        <li className=\"list-unstyled\">\n                            <a href=\"https://twitter.com/Chewbacca_w0w\" target=\"blank\">Twitter</a>\n                        </li>\n                        <li className=\"list-unstyled\">\n                            <a href=\"https://github.com/codeHysteria28\" target=\"blank\">GitHub</a>\n                        </li>\n                        <li className=\"list-unstyled\">\n                            <a href=\"\" target=\"blank\">Icons Licence</a>\n                        </li>\n                    </ul>\n                </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n            <div className=\"footer-copyright text-center py-3\">\n                <MDBContainer fluid>\n                &copy; {new Date().getFullYear()} Copyright: <a href=\"https://www.budgeter.club\"> Budgeter Club </a>\n                </MDBContainer>\n            </div>\n        </MDBFooter>\n    );\n}\n\nexport default Sentry.withProfiler(Footer);",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":232,"column":7,"nodeType":"68","endLine":232,"endColumn":9,"suggestions":"69"},{"ruleId":"62","replacedBy":"70"},{"ruleId":"64","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":279,"column":41,"nodeType":"74","endLine":279,"endColumn":72},{"ruleId":"72","severity":1,"message":"75","line":29,"column":29,"nodeType":"74","endLine":29,"endColumn":55},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getEntries'. Either include it or remove the dependency array.","ArrayExpression",["78"],["76"],["77"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},"Update the dependencies array to be: [getEntries]",{"range":"81","text":"82"},[8503,8505],"[getEntries]"]