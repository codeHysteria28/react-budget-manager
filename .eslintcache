[{"/Users/branislavbuna/Desktop/budget-manager/src/index.js":"1","/Users/branislavbuna/Desktop/budget-manager/src/components/signUp/Signup.js":"2","/Users/branislavbuna/Desktop/budget-manager/src/components/Login.js":"3","/Users/branislavbuna/Desktop/budget-manager/src/components/Dashboard.js":"4","/Users/branislavbuna/Desktop/budget-manager/src/components/Header.js":"5","/Users/branislavbuna/Desktop/budget-manager/src/components/SpendingTableEntries.js":"6","/Users/branislavbuna/Desktop/budget-manager/src/components/SpendingEntryModal.js":"7","/Users/branislavbuna/Desktop/budget-manager/src/components/Statistics.js":"8"},{"size":760,"mtime":1610830936156,"results":"9","hashOfConfig":"10"},{"size":5020,"mtime":1610616970877,"results":"11","hashOfConfig":"10"},{"size":2423,"mtime":1610827234805,"results":"12","hashOfConfig":"10"},{"size":1742,"mtime":1610827564344,"results":"13","hashOfConfig":"10"},{"size":1343,"mtime":1610471333797,"results":"14","hashOfConfig":"10"},{"size":4166,"mtime":1610630873781,"results":"15","hashOfConfig":"10"},{"size":3704,"mtime":1610624022544,"results":"16","hashOfConfig":"10"},{"size":473,"mtime":1610627047619,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"113eqpw",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/branislavbuna/Desktop/budget-manager/src/index.js",[],["37","38"],"/Users/branislavbuna/Desktop/budget-manager/src/components/signUp/Signup.js",[],"/Users/branislavbuna/Desktop/budget-manager/src/components/Login.js",[],"/Users/branislavbuna/Desktop/budget-manager/src/components/Dashboard.js",[],"/Users/branislavbuna/Desktop/budget-manager/src/components/Header.js",[],"/Users/branislavbuna/Desktop/budget-manager/src/components/SpendingTableEntries.js",["39"],"import React, {useState,useEffect} from 'react';\nimport { MDBContainer, MDBDataTable,MDBTabPane, MDBTabContent,MDBNav, MDBNavItem, MDBNavLink} from 'mdbreact';\nimport SpendingEntryModal from \"./SpendingEntryModal\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport './SpendingTableEntries.css';\nimport Statistics from \"./Statistics\";\n\nconst TablePage = (props) => {\n    const [spending,setSpending] = useState(null);\n    const [totalAmount, setTotalAmount] = useState(null);\n    const [activeItem, setActiveItem] = useState(\"1\");\n\n    const toggle = tab => {\n        if (activeItem !== tab) {\n            setActiveItem(tab);\n        }\n    };\n\n    const data = {\n        columns: [\n            {\n                label: '_id',\n                field: '_id',\n                sort: 'asc'\n            },\n            {\n                label: 'Item',\n                field: 'item',\n                sort: 'asc'\n            },\n            {\n                label: 'Cost',\n                field: 'price',\n                sort: 'asc'\n            },\n            {\n                label: 'Date',\n                field: 'paid_at',\n                sort: 'asc'\n            }\n\n        ],\n        rows: spending\n    }\n\n    const getEntries = () => {\n        axios({\n            method: \"POST\",\n            data: {\n                username: props.user\n            },\n            withCredentials: true,\n            url: \"/spending\",\n        }).then((res) => {\n            if(res.data !== {}){\n                let arr = [];\n                let obj = {};\n                let total_amount_arr = [];\n                res.data.forEach(item => {\n                    if(item._id.length > 10){\n                        item._id = item._id.substring(0,10);\n                    }\n                    obj = {\n                        _id: item._id,\n                        item: item.item,\n                        price: 'â‚¬ ' + item.price,\n                        paid_at: item.paid_at\n                    }\n                    total_amount_arr.push(item.price);\n                    arr.push(obj);\n                });\n\n                let sum_total_amount = total_amount_arr.reduce((a,b) => {\n                    return a + b;\n                },0);\n\n                setTimeout(() => {\n                    setTotalAmount(sum_total_amount);\n                },1000);\n\n                setSpending([...arr]);\n            }else {\n                Swal.fire({\n                    icon: 'error',\n                    title: 'Error with getting entries, please try again later.'\n                });\n            }\n        });\n    };\n\n    useEffect(()=> {\n        getEntries();\n    },[]);\n\n    return (\n        <>\n            <br/><br/>\n            <MDBContainer>\n                <MDBNav className=\"nav-tabs mt-5\">\n                    <MDBNavItem>\n                        <MDBNavLink link to=\"#\" active={activeItem === \"1\"} onClick={() => toggle(\"1\")} role=\"tab\" >\n                            Spending Breakdown\n                        </MDBNavLink>\n                    </MDBNavItem>\n                    <MDBNavItem>\n                        <MDBNavLink link to=\"#\" active={activeItem === \"2\"} onClick={() => toggle(\"2\")} role=\"tab\" >\n                            Statistics\n                        </MDBNavLink>\n                    </MDBNavItem>\n                </MDBNav>\n                <MDBTabContent activeItem={activeItem} >\n                    <MDBTabPane tabId=\"1\" role=\"tabpanel\">\n                        <div>\n                            <h1 style={{marginRight: 15, marginTop: 25}}>Spending Breakdown</h1>\n                            <SpendingEntryModal user={props.user} entryAdded={getEntries}/>\n                        </div>\n                        <br/>\n                        <MDBDataTable responsive striped bordered small data={data} paging={true} sortable={false} info={true}/>\n                    </MDBTabPane>\n                    <MDBTabPane tabId=\"2\" role=\"tabpanel\">\n                        <Statistics totalAmount={totalAmount}/>\n                    </MDBTabPane>\n                </MDBTabContent>\n            </MDBContainer>\n        </>\n    );\n};\n\nexport default TablePage;","/Users/branislavbuna/Desktop/budget-manager/src/components/SpendingEntryModal.js",[],["40","41"],"/Users/branislavbuna/Desktop/budget-manager/src/components/Statistics.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":94,"column":7,"nodeType":"48","endLine":94,"endColumn":9,"suggestions":"49"},{"ruleId":"42","replacedBy":"50"},{"ruleId":"44","replacedBy":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getEntries'. Either include it or remove the dependency array.","ArrayExpression",["54"],["52"],["53"],"no-global-assign","no-unsafe-negation",{"desc":"55","fix":"56"},"Update the dependencies array to be: [getEntries]",{"range":"57","text":"58"},[2652,2654],"[getEntries]"]